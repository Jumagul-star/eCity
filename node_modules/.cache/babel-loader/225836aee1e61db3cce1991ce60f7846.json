{"ast":null,"code":"import { LOGIN_USER, LOGIN_USER_SUCCESS, LOGIN_USER_FAILED, REGISTER_USER, REGISTER_USER_SUCCESS, REGISTER_USER_FAILED // LOGOUT_USER,\n} from './constants';\nimport Axios from 'axios'; // export const loginUser = (email, password) => (\n//     {\n//         type: LOGIN_USER,\n//         payload: {email, password}\n//     }\n// )\n\nexport const loginUser = ({\n  email,\n  password\n}, history) => dispatch => {\n  dispatch({\n    type: LOGIN_USER\n  });\n  Axios.post(process.env.REACT_APP_API_URL + '/api/auth/login', {\n    email,\n    password\n  }).then(({\n    data: {\n      token\n    }\n  }) => {\n    dispatch(loginUserSuccess(token, history));\n  }).catch(err => {\n    dispatch({\n      type: LOGIN_USER_FAILED,\n      payload: err\n    });\n  });\n};\n\nconst loginUserSuccess = (token, history) => {\n  localStorage.setItem('token', token);\n  history.replace('/');\n  return {\n    type: LOGIN_USER_SUCCESS\n  };\n}; //? REGISTER USER\n\n\nexport const regUser = ({\n  email,\n  password\n}, history) => dispatch => {\n  dispatch({\n    type: REGISTER_USER\n  });\n  Axios.post(process.env.REACT_APP_API_URL + '/api/auth/register', {\n    email,\n    password\n  }).then(() => {\n    dispatch(regUserSuccess(history));\n  }).catch(err => {\n    dispatch({\n      type: REGISTER_USER_FAILED,\n      payload: err\n    });\n  });\n};\n\nconst regUserSuccess = history => {\n  history.replace('/auth/login');\n  return {\n    type: REGISTER_USER_SUCCESS\n  };\n};","map":{"version":3,"sources":["/Users/friday/Desktop/e-city/src/redux/auth/actions.js"],"names":["LOGIN_USER","LOGIN_USER_SUCCESS","LOGIN_USER_FAILED","REGISTER_USER","REGISTER_USER_SUCCESS","REGISTER_USER_FAILED","Axios","loginUser","email","password","history","dispatch","type","post","process","env","REACT_APP_API_URL","then","data","token","loginUserSuccess","catch","err","payload","localStorage","setItem","replace","regUser","regUserSuccess"],"mappings":"AAAA,SACIA,UADJ,EAEIC,kBAFJ,EAGIC,iBAHJ,EAIIC,aAJJ,EAKIC,qBALJ,EAMIC,oBANJ,CAOI;AAPJ,OAQO,aARP;AASA,OAAOC,KAAP,MAAkB,OAAlB,C,CAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMC,SAAS,GAAG,CAAC;AAACC,EAAAA,KAAD;AAAQC,EAAAA;AAAR,CAAD,EAAoBC,OAApB,KAAiCC,QAAD,IAAc;AACnEA,EAAAA,QAAQ,CACJ;AACIC,IAAAA,IAAI,EAAEZ;AADV,GADI,CAAR;AAMAM,EAAAA,KAAK,CAACO,IAAN,CAAWC,OAAO,CAACC,GAAR,CAAYC,iBAAZ,GAAgC,iBAA3C,EAA8D;AAC1DR,IAAAA,KAD0D;AAE1DC,IAAAA;AAF0D,GAA9D,EAICQ,IAJD,CAIM,CAAC;AAACC,IAAAA,IAAI,EAAE;AAACC,MAAAA;AAAD;AAAP,GAAD,KAAqB;AACvBR,IAAAA,QAAQ,CAACS,gBAAgB,CAACD,KAAD,EAAQT,OAAR,CAAjB,CAAR;AACH,GAND,EAOCW,KAPD,CAOQC,GAAD,IAAS;AACZX,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAEV,iBADD;AAELqB,MAAAA,OAAO,EAAED;AAFJ,KAAD,CAAR;AAIH,GAZD;AAaH,CApBM;;AAsBP,MAAMF,gBAAgB,GAAG,CAACD,KAAD,EAAQT,OAAR,KAAoB;AACzCc,EAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BN,KAA9B;AACAT,EAAAA,OAAO,CAACgB,OAAR,CAAgB,GAAhB;AACA,SAAQ;AACJd,IAAAA,IAAI,EAAEX;AADF,GAAR;AAGH,CAND,C,CAQA;;;AACA,OAAO,MAAM0B,OAAO,GAAG,CAAC;AAACnB,EAAAA,KAAD;AAAQC,EAAAA;AAAR,CAAD,EAAoBC,OAApB,KAAiCC,QAAD,IAAc;AACjEA,EAAAA,QAAQ,CACJ;AACIC,IAAAA,IAAI,EAAET;AADV,GADI,CAAR;AAMAG,EAAAA,KAAK,CAACO,IAAN,CAAWC,OAAO,CAACC,GAAR,CAAYC,iBAAZ,GAAgC,oBAA3C,EAAiE;AAC7DR,IAAAA,KAD6D;AAE7DC,IAAAA;AAF6D,GAAjE,EAICQ,IAJD,CAIM,MAAM;AACRN,IAAAA,QAAQ,CAACiB,cAAc,CAAElB,OAAF,CAAf,CAAR;AACH,GAND,EAOCW,KAPD,CAOQC,GAAD,IAAS;AACZX,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAEP,oBADD;AAELkB,MAAAA,OAAO,EAAED;AAFJ,KAAD,CAAR;AAIH,GAZD;AAaH,CApBM;;AAsBP,MAAMM,cAAc,GAAKlB,OAAF,IAAc;AACjCA,EAAAA,OAAO,CAACgB,OAAR,CAAgB,aAAhB;AACA,SAAQ;AACJd,IAAAA,IAAI,EAAER;AADF,GAAR;AAGH,CALD","sourcesContent":["import {\n    LOGIN_USER,\n    LOGIN_USER_SUCCESS,\n    LOGIN_USER_FAILED,\n    REGISTER_USER,\n    REGISTER_USER_SUCCESS,\n    REGISTER_USER_FAILED,\n    // LOGOUT_USER,\n} from './constants';\nimport Axios from 'axios';\n\n// export const loginUser = (email, password) => (\n//     {\n//         type: LOGIN_USER,\n//         payload: {email, password}\n//     }\n// )\n\nexport const loginUser = ({email, password}, history) => (dispatch) => {\n    dispatch(\n        {\n            type: LOGIN_USER\n        }\n    );\n\n    Axios.post(process.env.REACT_APP_API_URL + '/api/auth/login', {\n        email,\n        password\n    })\n    .then(({data: {token}}) => {\n        dispatch(loginUserSuccess(token, history))\n    })\n    .catch((err) => {\n        dispatch({\n            type: LOGIN_USER_FAILED,\n            payload: err\n        })\n    })\n}   \n\nconst loginUserSuccess = (token, history) => {\n    localStorage.setItem('token', token);\n    history.replace('/');\n    return ({\n        type: LOGIN_USER_SUCCESS,\n    })\n}\n\n//? REGISTER USER\nexport const regUser = ({email, password}, history) => (dispatch) => {\n    dispatch(\n        {\n            type: REGISTER_USER\n        }\n    );\n\n    Axios.post(process.env.REACT_APP_API_URL + '/api/auth/register', {\n        email,\n        password\n    })\n    .then(() => {\n        dispatch(regUserSuccess( history))\n    })\n    .catch((err) => {\n        dispatch({\n            type: REGISTER_USER_FAILED,\n            payload: err\n        })\n    })\n}   \n\nconst regUserSuccess = ( history) => {\n    history.replace('/auth/login');\n    return ({\n        type: REGISTER_USER_SUCCESS,\n    })\n}\n\n"]},"metadata":{},"sourceType":"module"}