{"ast":null,"code":"var _jsxFileName = \"/Users/friday/Desktop/e-city/src/components/products/ListItem.js\";\nimport React from 'react';\nimport { Card, CardBody, ButtonGroup, Button } from 'reactstrap';\nimport styles from './Products.module.css';\nimport { useHistory, useParams } from 'react-router-dom';\nimport CartSvg from \"../../assets/icons/cart.svg\";\nimport { addItemToCart } from '../../redux/actions';\nimport { useState } from 'react';\n\nfunction ListItem({\n  item\n}) {\n  const params = useParams();\n  const [data, setData] = useState(null);\n  const history = useHistory();\n\n  const isInCart = (item, cartItems) => {\n    return !!cartItems.find(a => a.slug === item.slug);\n  };\n\n  const handleCartClick = e => {\n    e.stopPropagation();\n  };\n\n  return /*#__PURE__*/React.createElement(Card, {\n    onClick: () => history.replace(\"/products/\" + item.slug),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.imageContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: styles.image,\n    alt: item.title,\n    src: item.image,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }\n  }, item.title), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }\n  }, item.description), data ? /*#__PURE__*/React.createElement(ButtonGroup, {\n    className: \"w-100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 21\n    }\n  }, item.price, \" $\"), isInCart(data, props.cartItems) ? /*#__PURE__*/React.createElement(Button, {\n    color: \"warning\",\n    onClick: () => props.removeItemFromCart(data.slug),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 25\n    }\n  }, \"Remove from cart\") : /*#__PURE__*/React.createElement(Button, {\n    onClick: () => addItemToCart(data),\n    color: \"success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"ml-1\",\n    width: \"20\",\n    height: \"20\",\n    alt: \"cart\",\n    src: CartSvg,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 33\n    }\n  }))) : /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 21\n    }\n  }, \"Error 404: Product \", params.slug, \" is not defined\")));\n}\n\nexport default ListItem;","map":{"version":3,"sources":["/Users/friday/Desktop/e-city/src/components/products/ListItem.js"],"names":["React","Card","CardBody","ButtonGroup","Button","styles","useHistory","useParams","addItemToCart","useState","ListItem","item","params","data","setData","history","isInCart","cartItems","find","a","slug","handleCartClick","e","stopPropagation","replace","imageContainer","image","title","description","price","props","removeItemFromCart","CartSvg"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,QAAf,EAAyBC,WAAzB,EAAsCC,MAAtC,QAAoD,YAApD;AACA,OAAOC,MAAP,MAAmB,uBAAnB;AACA,SAASC,UAAT,EAAqBC,SAArB,QAAsC,kBAAtC;;AAEA,SAASC,aAAT,QAA8B,qBAA9B;AACA,SAASC,QAAT,QAAyB,OAAzB;;AAEA,SAASC,QAAT,CAAkB;AAAEC,EAAAA;AAAF,CAAlB,EAA4B;AACxB,QAAMC,MAAM,GAAGL,SAAS,EAAxB;AACA,QAAM,CAACM,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAMM,OAAO,GAAGT,UAAU,EAA1B;;AAEA,QAAMU,QAAQ,GAAG,CAACL,IAAD,EAAOM,SAAP,KAAqB;AAClC,WAAO,CAAC,CAACA,SAAS,CAACC,IAAV,CAAgBC,CAAD,IAAOA,CAAC,CAACC,IAAF,KAAWT,IAAI,CAACS,IAAtC,CAAT;AACH,GAFD;;AAIA,QAAMC,eAAe,GAAIC,CAAD,IAAK;AACzBA,IAAAA,CAAC,CAACC,eAAF;AACH,GAFD;;AAGA,sBACI,oBAAC,IAAD;AAAM,IAAA,OAAO,EAAE,MAAMR,OAAO,CAACS,OAAR,CAAgB,eAAeb,IAAI,CAACS,IAApC,CAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAEf,MAAM,CAACoB,cAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAEpB,MAAM,CAACqB,KAAvB;AAA8B,IAAA,GAAG,EAAEf,IAAI,CAACgB,KAAxC;AAA+C,IAAA,GAAG,EAAEhB,IAAI,CAACe,KAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKf,IAAI,CAACgB,KAAV,CAJJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIhB,IAAI,CAACiB,WAAT,CALJ,EAMKf,IAAI,gBACL,oBAAC,WAAD;AAAa,IAAA,SAAS,EAAC,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAyBF,IAAI,CAACkB,KAA9B,OADJ,EAEKb,QAAQ,CAACH,IAAD,EAAOiB,KAAK,CAACb,SAAb,CAAR,gBACG,oBAAC,MAAD;AACA,IAAA,KAAK,EAAC,SADN;AAEA,IAAA,OAAO,EAAE,MAAIa,KAAK,CAACC,kBAAN,CAAyBlB,IAAI,CAACO,IAA9B,CAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADH,gBAQO,oBAAC,MAAD;AACI,IAAA,OAAO,EAAE,MAAIZ,aAAa,CAACK,IAAD,CAD9B;AAEI,IAAA,KAAK,EAAC,SAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAGI;AACI,IAAA,SAAS,EAAC,MADd;AAEI,IAAA,KAAK,EAAC,IAFV;AAGI,IAAA,MAAM,EAAC,IAHX;AAII,IAAA,GAAG,EAAC,MAJR;AAKI,IAAA,GAAG,EAAEmB,OALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,CAVZ,CADK,gBAyBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BACwBpB,MAAM,CAACQ,IAD/B,oBA/BR,CADJ,CADJ;AAwCH;;AAED,eAAeV,QAAf","sourcesContent":["import React from 'react'\r\nimport { Card, CardBody, ButtonGroup, Button } from 'reactstrap';\r\nimport styles from './Products.module.css'\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport CartSvg from '../../assets/icons/cart.svg'\r\nimport { addItemToCart } from '../../redux/actions';\r\nimport { useState } from 'react';\r\n\r\nfunction ListItem({ item }) {\r\n    const params = useParams();\r\n    const [data, setData] = useState(null);\r\n    const history = useHistory()\r\n\r\n    const isInCart = (item, cartItems) => {\r\n        return !!cartItems.find((a) => a.slug === item.slug);\r\n    }\r\n    \r\n    const handleCartClick = (e)=>{\r\n        e.stopPropagation()\r\n    }\r\n    return (\r\n        <Card onClick={() => history.replace(\"/products/\" + item.slug)}>\r\n            <CardBody>\r\n                <div className={styles.imageContainer}>\r\n                    <img className={styles.image} alt={item.title} src={item.image} />\r\n                </div>\r\n                <h5>{item.title}</h5>\r\n                <p>{item.description}</p>\r\n                {data ? (\r\n                <ButtonGroup className='w-100'>\r\n                    <Button color='primary'>{item.price} $</Button> \r\n                    {isInCart(data, props.cartItems) ? (\r\n                        <Button \r\n                        color=\"warning\"\r\n                        onClick={()=>props.removeItemFromCart(data.slug)}\r\n                        >\r\n                            Remove from cart\r\n                        </Button>\r\n                    ) : (\r\n                            <Button \r\n                                onClick={()=>addItemToCart(data)}\r\n                                color='success'>\r\n                                <img\r\n                                    className=\"ml-1\"\r\n                                    width=\"20\"\r\n                                    height=\"20\"\r\n                                    alt=\"cart\"\r\n                                    src={CartSvg} />\r\n                            </Button>\r\n                    )}\r\n                </ButtonGroup>\r\n\r\n                ) : (\r\n                    <h4>\r\n                        Error 404: Product {params.slug} is not defined\r\n                    </h4>\r\n                )}\r\n            </CardBody>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default ListItem\r\n"]},"metadata":{},"sourceType":"module"}